# auth-service-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: milofow/bingebuster-authservice:latest
        ports:
          - containerPort: 50051
        env:
          - name: MONGODB_USER
            value: "user-service"
          - name: MONGODB_PWD
            value: "vLxxhmS0eJFwmteF"
          - name: MONGODB_CLUSTER
            value: "cluster0.fpedw5d.mongodb.net/"
          - name: MONGODB_DB
            value: "AuthService"
          - name: MONGODB_COLLECTION
            value: "Users"
          - name: RABBITMQ_USER
            value: "tnhdeowx"
          - name: RABBITMQ_PWD
            value: "tInXH7wKtKdyn-v97fZ_HGM5XmHsDTNl"
---

# movie-service-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movie-service
  template:
    metadata:
      labels:
        app: movie-service
    spec:
      hostname: movie-service-host
      containers:
      - name: movie-service
        image: milofow/bingebuster-movieservice:latest
        ports:
          - containerPort: 50055
        env:
          - name: MONGODB_USER
            value: "user-service"
          - name: MONGODB_PWD
            value: "vLxxhmS0eJFwmteF"
          - name: MONGODB_CLUSTER
            value: "cluster0.fpedw5d.mongodb.net/"
          - name: MONGODB_DB
            value: "MovieService"
          - name: MONGODB_COLLECTION
            value: "Movies"
          - name: RABBITMQ_USER
            value: "tnhdeowx"
          - name: RABBITMQ_PWD
            value: "tInXH7wKtKdyn-v97fZ_HGM5XmHsDTNl"
---
# api-gateway-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
      annotations:   
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "3000"
    spec:
      containers:
      - name: api-gateway
        image: milofow/bingebuster-gateway:latest
        ports:
          - containerPort: 3000
        env:
          - name: AUTH_SVC_URL
            value: "auth-service:50051"
          - name: USER_SVC_URL
            value: "user-service:50053"
          - name: MOVIE_SVC_URL
            value: "movie-service:50055"
          - name: HISTORY_SVC_URL
            value: "watchhistory-service:50056"
          - name: AUTHZ_SVC_URL
            value: "auth-service:50057"

---

# watchhistory-service-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: watchhistory-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watchhistory-service
  template:
    metadata:
      labels:
        app: watchhistory-service
    spec:
      containers:
      - name: watchhistory-service
        image: milofow/bingebuster-watchhistoryservice:latest
        ports:
          - containerPort: 50056
        env:
          - name: MONGODB_USER
            value: "user-service"
          - name: MONGODB_PWD
            value: "vLxxhmS0eJFwmteF"
          - name: MONGODB_CLUSTER
            value: "cluster0.fpedw5d.mongodb.net/"
          - name: MONGODB_DB
            value: "WatchHistoryService"
          - name: MONGODB_COLLECTION
            value: "Histories"
          - name: RABBITMQ_USER
            value: "tnhdeowx"
          - name: RABBITMQ_PWD
            value: "tInXH7wKtKdyn-v97fZ_HGM5XmHsDTNl"

---

# user-service-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: milofow/bingebuster-userservice:latest
        ports:
          - containerPort: 50053
        env:
          - name: MONGODB_USER
            value: "user-service"
          - name: MONGODB_PWD
            value: "vLxxhmS0eJFwmteF"
          - name: MONGODB_CLUSTER
            value: "cluster0.fpedw5d.mongodb.net/"
          - name: MONGODB_DB
            value: "UserService"
          - name: MONGODB_COLLECTION
            value: "Users"
          - name: RABBITMQ_USER
            value: "tnhdeowx"
          - name: RABBITMQ_PWD
            value: "tInXH7wKtKdyn-v97fZ_HGM5XmHsDTNl"

---

# authz-service-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authz-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authz-service
  template:
    metadata:
      labels:
        app: authz-service
    spec:
      containers:
      - name: authz-service
        image: milofow/bingebuster-authzservice:latest
        ports:
          - containerPort: 50057
        env:
          - name: MONGODB_USER
            value: "user-service"
          - name: MONGODB_PWD
            value: "vLxxhmS0eJFwmteF"
          - name: MONGODB_CLUSTER
            value: "cluster0.fpedw5d.mongodb.net/"
          - name: MONGODB_DB
            value: "AuthzService"
          - name: MONGODB_COLLECTION
            value: "Users"
          - name: RABBITMQ_USER
            value: "tnhdeowx"
          - name: RABBITMQ_PWD
            value: "tInXH7wKtKdyn-v97fZ_HGM5XmHsDTNl"


---

# prometheus-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.30.3
          ports:
            - containerPort: 9090
          args:
            - --config.file=/etc/prometheus/prometheus.yml
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:10255
            target_label: __address__
          - source_labels: [__address__]
            action: replace
            regex: '[^:]+:(\d+)'
            replacement: /metrics
            target_label: __metrics_path__
      - job_name: 'api-gateway'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;api-gateway;3000

---

# grafana-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
          - containerPort: 4000
        env:
          - name: GF_SECURITY_ADMIN_USER
            value: "admin"                          # Set the admin username
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "password"                       # Set the admin password
          - name: GF_INSTALL_PLUGINS
            value: "grafana-clock-panel"            # Add any desired plugins here
